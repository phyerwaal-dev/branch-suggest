{"version":3,"sources":["Components/Home.js","Pages/Main.js","Pages/dev.js","Components/Questions.js","Components/Result.js","App.js","serviceWorker.js","Reducer/index.js","index.js","Web_bg.png","phyerwaal_dev_logo_final.png"],"names":["Home","state","collapsed","handleTogglerClick","setState","document","querySelector","style","height","this","overlay","id","backgroundColor","onClick","className","color","marginTop","light","expand","fixed","scrolling","transparent","href","isOpen","navbar","right","active","to","src","bg","width","paddingTop","sm","md","animationDelay","fluid","Date","getFullYear","React","Component","Main","Developers","align","logo","alt","Row","Col","Questions","props","nr","radio","onChoose","x","val","a","console","log","data","parseInt","question","selection","select","options","opt","new_selection","map","i","key","push","validate","error","msg","err","length","axios","post","sort","b","then","response","storeResponse","history","catch","current","loading","questions","xxx","shuffle","arra1","temp","index","ctr","Math","floor","random","includes","display","oindex","required","type","label","e","target","checked","Array","from","connect","dispatch","series","useState","App","exact","path","component","Developer","Results","Boolean","window","location","hostname","match","initState","colors","plotOptions","bar","columnWidth","distributed","chart","toolbar","show","xaxis","categories","name","rootReducer","action","probab","probabilities","prob","round","middleware","thunk","enhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","store","createStore","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","message","module","exports"],"mappings":"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","file":"static/js/main.b4a12a89.chunk.js","sourcesContent":["import React from 'react';\r\nimport {\r\n    MDBNavbar,\r\n    MDBNavbarBrand,\r\n    MDBNavbarNav,\r\n    MDBNavItem,\r\n    MDBNavLink,\r\n    MDBNavbarToggler,\r\n    MDBCollapse,\r\n    MDBRow,\r\n    MDBCol,\r\n    MDBBtn,\r\n    MDBView,\r\n    MDBContainer,\r\n    MDBFooter,\r\n    MDBLink,\r\n} from 'mdbreact';\r\nimport '../home.css';\r\nimport bg from '../Web_bg.png';\r\n\r\nclass Home extends React.Component {\r\n    state = {\r\n        collapsed: false\r\n    };\r\n\r\n    handleTogglerClick = () => {\r\n        const { collapsed } = this.state;\r\n        this.setState({\r\n            collapsed: !collapsed\r\n        });\r\n    };\r\n\r\n    componentDidMount() {\r\n        document.querySelector('nav').style.height = '65px';\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.querySelector('nav').style.height = 'auto';\r\n    }\r\n\r\n    render() {\r\n        const { collapsed } = this.state;\r\n        const navStyle = { marginTop: '2rem' };\r\n        const overlay = (\r\n            <div\r\n                id='sidenav-overlay'\r\n                style={{ backgroundColor: 'transparent' }}\r\n                onClick={this.handleTogglerClick}\r\n            />\r\n        );\r\n        return (\r\n            <div id='caltoaction'>\r\n                <div className=\"fadeInDown\">\r\n                    <MDBNavbar\r\n                        color='secondary-color'\r\n                        style={navStyle}\r\n                        light\r\n                        expand='md'\r\n                        fixed='top'\r\n                        scrolling\r\n                        transparent\r\n                    >\r\n                        <MDBContainer>\r\n                            <MDBNavbarBrand href=\"/career/\">\r\n                                <strong>APSIT Career</strong>\r\n                            </MDBNavbarBrand>\r\n                            <MDBNavbarToggler onClick={this.handleTogglerClick} />\r\n                            <MDBCollapse isOpen={collapsed} navbar>\r\n                                <MDBNavbarNav right>\r\n                                    <MDBNavItem active>\r\n                                        <MDBNavLink to='/career/'>Home</MDBNavLink>\r\n                                    </MDBNavItem>\r\n                                    <MDBNavItem>\r\n                                        <MDBNavLink to='/career/dev'>Developers</MDBNavLink>\r\n                                    </MDBNavItem>\r\n                                </MDBNavbarNav>\r\n                            </MDBCollapse>\r\n                        </MDBContainer>\r\n                    </MDBNavbar>\r\n                    {collapsed && overlay}\r\n                </div>\r\n                <MDBView src={bg}>\r\n                    <MDBContainer\r\n                        style={{ height: '100%', width: '100%', paddingTop: '12rem' }}\r\n                        className='d-flex justify-content-center align-items-center'\r\n                    >\r\n                        <MDBRow>\r\n                            <MDBCol sm='4' md='12' className='mb-4 text-center'>\r\n                                <h1 className='display-4 font-weight-bold mb-0 pt-md-5 pt-5 fadeInDown' style={{ animationDelay: '.5s' }}>\r\n                                    Find Your Interested Branch\r\n                                </h1>\r\n                                <h4 className='pt-md-1 pt-sm-2 pt-1 pb-md-3 pb-sm-3 pb-3 fadeInDown' style={{ animationDelay: '.7s' }}>\r\n                                    Confusion is <strong className=\"highlight\">Temporary</strong>, Interest is <strong className=\"highlight\">Permanent</strong>\r\n                                </h4>\r\n                                <MDBLink to=\"/career/questions\">\r\n                                    <MDBBtn color=\"success\" className=\"fadeInDown\" style={{ animationDelay: '1s' }}>Let Us Help</MDBBtn>\r\n                                </MDBLink>\r\n                            </MDBCol>\r\n                        </MDBRow>\r\n                    </MDBContainer>\r\n                    <MDBFooter>\r\n                        <div className=\"footer-copyright text-center\" style={{ paddingTop: '8rem' }}>\r\n                            <MDBContainer fluid className=\"fadeInDown\" style={{ animationDelay: '1.2s' }}>\r\n                                &copy; {new Date().getFullYear()} Phyerwaal Dev\r\n                        </MDBContainer>\r\n                        </div>\r\n                    </MDBFooter>\r\n                </MDBView>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport Home from '../Components/Home';\r\n\r\nfunction Main() {\r\n    return (\r\n        <div>\r\n            <Home />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\nimport { Row, Col } from 'reactstrap';\r\nimport '../CSS/dev.css';\r\nimport logo from '../phyerwaal_dev_logo_final.png';\r\n\r\nexport default function Developers() {\r\n    return (\r\n        <section id=\"dev-section\">\r\n            <div className=\"header\" align=\"center\">\r\n                <p align=\"center\" className=\"dev\">\r\n                    Developed By\r\n                </p>\r\n                <img src={logo} alt=\"Phyerwaal_Dev\" />\r\n                <Row className=\"dev-details\">\r\n                    <Col sm={12} md={3}>\r\n                        <h1 className=\"name\">Tejas Raibagi</h1>\r\n                    </Col>\r\n                    <Col sm={12} md={3}>\r\n                        <h1 className=\"name\">Prasad Jadhav</h1>\r\n                    </Col>\r\n                    <Col sm={12} md={3}>\r\n                        <h1 className=\"name\">Sujoy Dev</h1>\r\n                    </Col>\r\n                    <Col sm={12} md={3}>\r\n                        <h1 className=\"name\">Aseem Godambe</h1>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        </section>\r\n    );\r\n}","import React from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport {\r\n  MDBBtn,\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBCardTitle,\r\n  MDBRow,\r\n  MDBView,\r\n  MDBContainer,\r\n  MDBNavbar,\r\n  MDBNavbarBrand,\r\n  MDBNavbarToggler,\r\n  MDBCollapse,\r\n  MDBNavbarNav,\r\n  MDBNavItem,\r\n  MDBNavLink,\r\n  MDBInput,\r\n  MDBLink,\r\n} from \"mdbreact\";\r\nimport axios from \"axios\";\r\nimport \"../question.css\";\r\nimport questions from \"../data/questions.json\";\r\nimport options from \"../data/options.json\";\r\nimport logo from \"../Web_bg.png\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Questions extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      current: [0, 1, 2, 3, 4],\r\n      loading: false,\r\n      collapsed: false,\r\n      msg: \"\",\r\n      error: 0,\r\n      selection: questions.map((i, key) => {\r\n        let data = { id: i.id, question: i.question, val: null, select: null };\r\n        return data;\r\n      }),\r\n    };\r\n  }\r\n\r\n  handleTogglerClick = () => {\r\n    const { collapsed } = this.state;\r\n    this.setState({\r\n      collapsed: !collapsed,\r\n    });\r\n  };\r\n\r\n  onClick = (nr) => () => {\r\n    this.setState({\r\n      radio: nr,\r\n    });\r\n  };\r\n  componentWillMount() {\r\n    var xxx = this.shuffle(this.state.selection);\r\n    console.log(xxx);\r\n    this.setState({ selection: xxx });\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.querySelector(\"nav\").style.height = \"65px\";\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.querySelector(\"nav\").style.height = \"auto\";\r\n  }\r\n\r\n  shuffle(arra1) {\r\n    var ctr = arra1.length,\r\n      temp,\r\n      index;\r\n\r\n    // While there are elements in the array\r\n    while (ctr > 0) {\r\n      // Pick a random index\r\n      index = Math.floor(Math.random() * ctr);\r\n      // Decrease ctr by 1\r\n      ctr--;\r\n      // And swap the last element with it\r\n      temp = arra1[ctr];\r\n      arra1[ctr] = arra1[index];\r\n      arra1[index] = temp;\r\n    }\r\n    return arra1;\r\n  }\r\n\r\n  //Set Answers\r\n  onChoose = async (id, x, val) => {\r\n    // console.log(this.state.selection);\r\n\r\n    console.log(id, x, val);\r\n    let data = {\r\n      id: parseInt(id),\r\n      val: val,\r\n      question: this.state.selection[x].question,\r\n      select: options[val].opt,\r\n    };\r\n    console.log(data);\r\n    var new_selection = [];\r\n\r\n    await this.state.selection.map((i, key) => {\r\n      if (i.id === data.id) console.log(i);\r\n      i.id == data.id\r\n        ? new_selection.push(data)\r\n        : new_selection.push({\r\n            id: i.id,\r\n            val: i.val,\r\n            question: i.question,\r\n            select: i.select,\r\n          });\r\n    });\r\n    await this.setState({ selection: new_selection });\r\n    console.log(this.state.selection);\r\n  };\r\n\r\n  //Validate questions\r\n  validate = async () => {\r\n    await this.setState({\r\n      error: 0,\r\n      msg: \"\",\r\n    });\r\n    var err = 0;\r\n    for (var i = 0; i <= this.state.selection.length - 1; i++) {\r\n      if (this.state.selection[i].val == null) {\r\n        // console.log(this.state.selection[i].id + \" : \" + this.state.selection[i].val);\r\n        // await this.setState({ msg: \"\" });\r\n        // this.setState({ msg: \"Please fill all the questions.\" });\r\n        // this.setState({ error: this.state.error + 1 });\r\n        err = err + 1;\r\n      }\r\n      // else {\r\n      //     console.log(\" Value is Null for \" + i);\r\n      //     console.log(this.state.selection);\r\n      //     await this.setState({ msg: \"Please fill all the questions.\" });\r\n      //     await this.setState({ error: this.state.error + 1 });\r\n      // }\r\n    }\r\n    // if\r\n    // console.log(\r\n    //   this.state.selection.sort(function (a, b) {\r\n    //     return a.id - b.id;\r\n    //   })\r\n    // );\r\n    if (err > 0)\r\n      this.setState({\r\n        error: err,\r\n        msg: \"Please fill all the questions.\",\r\n      });\r\n    console.log(\"Error: \" + this.state.error);\r\n    if (this.state.error == 0) {\r\n      axios\r\n        .post(\"https://phyerwaal-dev-career.herokuapp.com/submit-data\", {\r\n          data: this.state.selection.sort(function (a, b) {\r\n            return a.id - b.id;\r\n          }),\r\n        })\r\n        .then((response) => {\r\n          // console.log(response.data);\r\n          // console.log(\"This :\" + this);\r\n          this.props.storeResponse(response.data);\r\n          this.props.history.push(\"/career/results\");\r\n        })\r\n        .catch(function (error) {\r\n          //console.log(error);\r\n        });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { collapsed } = this.state;\r\n    const navStyle = { marginTop: \"2rem\" };\r\n    const overlay = (\r\n      <div\r\n        id='sidenav-overlay'\r\n        style={{ backgroundColor: \"white\" }}\r\n        onClick={this.handleTogglerClick}\r\n      />\r\n    );\r\n    return (\r\n      <div id='questions'>\r\n        <div className='fadeInDown'>\r\n          <MDBNavbar\r\n            color='secondary-color'\r\n            style={navStyle}\r\n            light\r\n            expand='md'\r\n            scrolling\r\n            transparent\r\n          >\r\n            <MDBContainer>\r\n              <MDBNavbarBrand href='/career/'>\r\n                <strong>APSIT Career</strong>\r\n              </MDBNavbarBrand>\r\n              <MDBNavbarToggler onClick={this.handleTogglerClick} />\r\n              <MDBCollapse isOpen={collapsed} navbar>\r\n                <MDBNavbarNav right>\r\n                  <MDBNavItem>\r\n                    <MDBNavLink to='/career/'>Home</MDBNavLink>\r\n                  </MDBNavItem>\r\n                  <MDBNavItem>\r\n                    <MDBNavLink to='/career/dev'>Developers</MDBNavLink>\r\n                  </MDBNavItem>\r\n                </MDBNavbarNav>\r\n              </MDBCollapse>\r\n            </MDBContainer>\r\n          </MDBNavbar>\r\n          {collapsed && overlay}\r\n        </div>\r\n        <MDBView src={logo}>\r\n          <MDBContainer\r\n            style={{ height: \"100%\", width: \"100%\", paddingTop: \"5rem\" }}\r\n            className='d-flex justify-content-center align-items-center'\r\n          >\r\n            <MDBRow>\r\n              <h1\r\n                className='display-10 font-weight-bold question-header fadeInDown'\r\n                style={{ animationDelay: \".2s\" }}\r\n              >\r\n                QUESTIONS\r\n              </h1>\r\n              <MDBCard style={{ width: \"100%\" }}>\r\n                {this.state.selection.map((question, index) => {\r\n                  return (\r\n                    <div\r\n                      className='card fadeInDown'\r\n                      style={\r\n                        this.state.current.includes(index)\r\n                          ? { display: \"block\", animationDelay: \".0s\" }\r\n                          : { display: \"none\", animationDelay: \".0s\" }\r\n                      }\r\n                    >\r\n                      <MDBCardBody>\r\n                        <MDBCardTitle>\r\n                          Q{index + 1}. {question.question}\r\n                        </MDBCardTitle>\r\n                        {options.map((opt, oindex) => {\r\n                          return (\r\n                            <MDBContainer className='mt-3'>\r\n                              <MDBInput\r\n                                key={oindex}\r\n                                required\r\n                                type='radio'\r\n                                label={opt.opt}\r\n                                id={question.id}\r\n                                onClick={(e) => {\r\n                                  this.onChoose(e.target.id, index, opt.val);\r\n                                }}\r\n                                checked={\r\n                                  this.state.selection[index].val == opt.val\r\n                                    ? true\r\n                                    : false\r\n                                }\r\n                              />\r\n                            </MDBContainer>\r\n                          );\r\n                        })}\r\n                      </MDBCardBody>\r\n                      <hr></hr>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </MDBCard>\r\n              <div\r\n                className='send-btn fadeInDown'\r\n                style={{ animationDelay: \"1s\" }}\r\n              >\r\n                <h5 className='error-msg justify-content-center align-items-center'>\r\n                  {this.state.msg}\r\n                </h5>\r\n                {this.state.current[4] <= 4 ? null : (\r\n                  <MDBBtn\r\n                    color='success'\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        current: Array.from(this.state.current, (x) => x - 5),\r\n                      });\r\n                    }}\r\n                  >\r\n                    prev\r\n                  </MDBBtn>\r\n                )}\r\n\r\n                {this.state.current[4] >= this.state.selection.length - 1 ? (\r\n                  <MDBBtn color='success' onClick={this.validate}>\r\n                    SEND ANSWER\r\n                  </MDBBtn>\r\n                ) : (\r\n                  <MDBBtn\r\n                    color='success'\r\n                    onClick={async () => {\r\n                      await this.setState({\r\n                        current: Array.from(this.state.current, (x) => x + 5),\r\n                      });\r\n                      console.log(this.state.current);\r\n                    }}\r\n                  >\r\n                    next\r\n                  </MDBBtn>\r\n                )}\r\n\r\n                {/* <MDBBtn color='success' onClick={this.validate}>\r\n                  SEND ANSWER\r\n                </MDBBtn> */}\r\n              </div>\r\n            </MDBRow>\r\n          </MDBContainer>\r\n        </MDBView>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n//Dispatch Data to store state\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    storeResponse: (response) => {\r\n      dispatch({ type: \"RES_SUCCESS\", response: response });\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Questions);\r\n","import React, { useState } from \"react\";\r\nimport Chart from \"react-apexcharts\";\r\nimport { Col } from \"reactstrap\";\r\nimport { connect } from 'react-redux';\r\nimport '../CSS/results.css';\r\nimport { MDBLink, MDBBtn } from \"mdbreact\";\r\n\r\nconst Result = ({ options, series }) => {\r\n    const [result, setResult] = useState();\r\n    // console.log(options);\r\n    return (\r\n        <div className=\"app\" align=\"center\">\r\n            <Col className=\"justify-content-center align-items-center\">\r\n                <h1 className=\"header-title\">Results</h1>\r\n            </Col>\r\n            <Col>\r\n                <div className=\"mixed-chart\">\r\n                    {series ?\r\n                        <Chart\r\n                            options={options}\r\n                            series={series}\r\n                            type=\"bar\"\r\n                            width=\"500\"\r\n                        />\r\n                        : null\r\n                    }\r\n\r\n                </div>\r\n                <p align=\"center\">In the above graph, the probability has been calculated according to your answers.</p>\r\n                <p align='center'>Please check all the probabilities.</p>\r\n                <MDBLink to='/career/'>\r\n                    <MDBBtn color=\"success\">HOME</MDBBtn>\r\n                </MDBLink>\r\n            </Col>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    // res: state.res,\r\n    options: state.options,\r\n    series: state.series,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Result);\r\n","import React from 'react';\r\nimport Main from './Pages/Main';\r\nimport Developer from './Pages/dev';\r\nimport Questions from './Components/Questions';\r\nimport Results from './Components/Result';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route exact path=\"/career/\" component={Main} />\r\n        <Route exact path=\"/career/dev\" component={Developer} />\r\n        <Route exact path=\"/career/questions\" component={Questions} />\r\n        <Route exact path=\"/career/results\" component={Results} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","const initState = {\r\n    options: {\r\n        colors: ['#121212', '#18b64b', '#e68a8c', '#df5f6c', '#dbb593'],\r\n        plotOptions: {\r\n            bar: {\r\n                columnWidth: '45%',\r\n                distributed: true\r\n            }\r\n        },\r\n        chart: {\r\n            toolbar: {\r\n                show: false\r\n            },\r\n            id: \"basic-bar\"\r\n        },\r\n        xaxis: {\r\n            categories: [\"Civil\", \"Computers\", \"EXTC\", \"IT\", \"Mechanical\"]\r\n        }\r\n    },\r\n    series: [\r\n        {\r\n            name: \"Possibilities\",\r\n            data: []\r\n        },\r\n    ],\r\n};\r\n\r\nconst rootReducer = (state = initState, action) => {\r\n    if (action.type == 'RES_SUCCESS') {\r\n        // console.log(\"Action : \", action.response.probabilities.map((prob, index) => {\r\n        //     return prob * 100\r\n        // }));\r\n        let probab = action.response.probabilities.map((prob, index) => {\r\n            return Math.round(prob * 100)\r\n        });\r\n        // let resp = action.response;\r\n        return {\r\n            ...state,\r\n            series: [{\r\n                name: \"Probability % \",\r\n                data: probab,\r\n            }],\r\n        }\r\n    }\r\n    return state\r\n}\r\n\r\nexport default rootReducer;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, compose, applyMiddleware } from \"redux\";\r\nimport rootReducer from \"./Reducer/index\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst middleware = [thunk];\r\nconst composeEnhancers =\r\n  typeof window === \"object\" && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n        // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\r\n      })\r\n    : compose;\r\n\r\nconst enhancer = composeEnhancers(\r\n  applyMiddleware(...middleware)\r\n  // other store enhancers if any\r\n);\r\nconst store = createStore(rootReducer, enhancer);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/Web_bg.f2e4e6ab.png\";","module.exports = __webpack_public_path__ + \"static/media/phyerwaal_dev_logo_final.fad90657.png\";"],"sourceRoot":""}