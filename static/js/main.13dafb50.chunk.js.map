{"version":3,"sources":["Web_bg.png","phyerwaal_dev_logo_final.png","Components/Home.js","Pages/Main.js","Pages/dev.js","Components/Questions.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","CallToActionIntro","state","collapsed","handleTogglerClick","setState","document","querySelector","style","height","this","overlay","id","backgroundColor","onClick","className","color","marginTop","light","expand","fixed","scrolling","transparent","href","isOpen","navbar","right","active","to","src","logo","width","paddingTop","sm","md","animationDelay","fluid","Date","getFullYear","React","Component","Main","Home","Developers","align","alt","Row","Col","Questions","selection","questions","map","i","key","val","nr","radio","onChoose","e","a","data","parseInt","target","new_selection","push","question","index","options","opt","oindex","bind","checked","label","type","App","exact","path","component","Developer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.13dafb50.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Web_bg.f2e4e6ab.png\";","module.exports = __webpack_public_path__ + \"static/media/phyerwaal_dev_logo_final.fad90657.png\";","import React from 'react';\r\nimport {\r\n    MDBNavbar,\r\n    MDBNavbarBrand,\r\n    MDBNavbarNav,\r\n    MDBNavItem,\r\n    MDBNavLink,\r\n    MDBNavbarToggler,\r\n    MDBCollapse,\r\n    MDBRow,\r\n    MDBCol,\r\n    MDBBtn,\r\n    MDBView,\r\n    MDBContainer,\r\n    MDBFooter,\r\n    MDBLink,\r\n} from 'mdbreact';\r\nimport '../home.css';\r\nimport logo from '../Web_bg.png';\r\n\r\nclass CallToActionIntro extends React.Component {\r\n    state = {\r\n        collapsed: false\r\n    };\r\n\r\n    handleTogglerClick = () => {\r\n        const { collapsed } = this.state;\r\n        this.setState({\r\n            collapsed: !collapsed\r\n        });\r\n    };\r\n\r\n    componentDidMount() {\r\n        document.querySelector('nav').style.height = '65px';\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.querySelector('nav').style.height = 'auto';\r\n    }\r\n\r\n    render() {\r\n        const { collapsed } = this.state;\r\n        const navStyle = { marginTop: '2rem' };\r\n        const overlay = (\r\n            <div\r\n                id='sidenav-overlay'\r\n                style={{ backgroundColor: 'transparent' }}\r\n                onClick={this.handleTogglerClick}\r\n            />\r\n        );\r\n        return (\r\n            <div id='caltoaction'>\r\n                <div className=\"fadeInDown\">\r\n                    <MDBNavbar\r\n                        color='secondary-color'\r\n                        style={navStyle}\r\n                        light\r\n                        expand='md'\r\n                        fixed='top'\r\n                        scrolling\r\n                        transparent\r\n                    >\r\n                        <MDBContainer>\r\n                            <MDBNavbarBrand href=\"/career/\">\r\n                                <strong>APSIT Career</strong>\r\n                            </MDBNavbarBrand>\r\n                            <MDBNavbarToggler onClick={this.handleTogglerClick} />\r\n                            <MDBCollapse isOpen={collapsed} navbar>\r\n                                <MDBNavbarNav right>\r\n                                    <MDBNavItem active>\r\n                                        <MDBNavLink to='/career/'>Home</MDBNavLink>\r\n                                    </MDBNavItem>\r\n                                    <MDBNavItem>\r\n                                        <MDBNavLink to='/career/dev'>Developers</MDBNavLink>\r\n                                    </MDBNavItem>\r\n                                </MDBNavbarNav>\r\n                            </MDBCollapse>\r\n                        </MDBContainer>\r\n                    </MDBNavbar>\r\n                    {collapsed && overlay}\r\n                </div>\r\n                <MDBView src={logo}>\r\n                    <MDBContainer\r\n                        style={{ height: '100%', width: '100%', paddingTop: '12rem' }}\r\n                        className='d-flex justify-content-center align-items-center'\r\n                    >\r\n                        <MDBRow>\r\n                            <MDBCol sm='4' md='12' className='mb-4 text-center'>\r\n                                <h1 className='display-4 font-weight-bold mb-0 pt-md-5 pt-5 fadeInDown' style={{ animationDelay: '.5s' }}>\r\n                                    Find Your Interested Branch\r\n                                </h1>\r\n                                <h4 className='pt-md-1 pt-sm-2 pt-1 pb-md-3 pb-sm-3 pb-3 fadeInDown' style={{ animationDelay: '.7s' }}>\r\n                                    Confusion is <strong>Temperary</strong>, Interest is <strong>Permanent</strong>\r\n                                </h4>\r\n                                <MDBLink to=\"/career/questions\">\r\n                                    <MDBBtn color=\"success\" className=\"fadeInDown\" style={{ animationDelay: '1s' }}>Let Us Help</MDBBtn>\r\n                                </MDBLink>\r\n                            </MDBCol>\r\n                        </MDBRow>\r\n                    </MDBContainer>\r\n                    <MDBFooter>\r\n                        <div className=\"footer-copyright text-center\" style={{ paddingTop: '8rem' }}>\r\n                            <MDBContainer fluid className=\"fadeInDown\" style={{ animationDelay: '1.2s' }}>\r\n                                &copy; {new Date().getFullYear()} Phyerwaal Dev\r\n                        </MDBContainer>\r\n                        </div>\r\n                    </MDBFooter>\r\n                </MDBView>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default CallToActionIntro;","import React from 'react';\r\nimport Home from '../Components/Home';\r\n\r\nfunction Main() {\r\n    return (\r\n        <div>\r\n            <Home />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\nimport { Row, Col } from 'reactstrap';\r\nimport '../CSS/dev.css';\r\nimport logo from '../phyerwaal_dev_logo_final.png';\r\n\r\nexport default function Developers() {\r\n    return (\r\n        <section id=\"dev-section\">\r\n            <div className=\"header\" align=\"center\">\r\n                <p align=\"center\" className=\"dev\">\r\n                    Developed By\r\n                </p>\r\n                <img src={logo} alt=\"Phyerwaal_Dev\" />\r\n                <Row className=\"dev-details\">\r\n                    <Col sm={12} md={3}>\r\n                        <h1 className=\"name\">Tejas Raibagi</h1>\r\n                    </Col>\r\n                    <Col sm={12} md={3}>\r\n                        <h1 className=\"name\">Prasad Jadhav</h1>\r\n                    </Col>\r\n                    <Col sm={12} md={3}>\r\n                        <h1 className=\"name\">Sujoy Dev</h1>\r\n                    </Col>\r\n                    <Col sm={12} md={3}>\r\n                        <h1 className=\"name\">Aseem Godambe</h1>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        </section>\r\n    );\r\n}","import React from \"react\";\r\nimport {\r\n  MDBBtn,\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBCardTitle,\r\n  MDBRow,\r\n  MDBView,\r\n  MDBContainer,\r\n  MDBNavbar,\r\n  MDBNavbarBrand,\r\n  MDBNavbarToggler,\r\n  MDBCollapse,\r\n  MDBNavbarNav,\r\n  MDBNavItem,\r\n  MDBNavLink,\r\n  MDBInput,\r\n} from \"mdbreact\";\r\nimport \"../question.css\";\r\nimport questions from \"../data/questions.json\";\r\nimport options from \"../data/options.json\";\r\nimport logo from \"../Web_bg.png\";\r\n\r\nclass Questions extends React.Component {\r\n  state = {\r\n    collapsed: false,\r\n    selection: questions.map((i, key) => {\r\n      let data = { id: i.id, val: null };\r\n      return data;\r\n    }),\r\n    // selection: [\r\n    //   { id: 1, val: 0 },\r\n    //   { id: 2, val: 1 },\r\n    //   { id: 3, val: 2 },\r\n    //   { id: 4, val: 3 },\r\n    //   { id: 5, val: 4 },\r\n    //   { id: 6, val: 1 },\r\n    //   { id: 7, val: 3 },\r\n    //   { id: 8, val: 4 },\r\n    //   { id: 9, val: 0 },\r\n    //   { id: 10, val: 0 },\r\n    //   { id: 11, val: 0 },\r\n    //   { id: 12, val: 1 },\r\n    //   { id: 13, val: 2 },\r\n    //   { id: 14, val: 3 },\r\n    //   { id: 15, val: 4 },\r\n    //   { id: 16, val: 1 },\r\n    //   { id: 17, val: 3 },\r\n    //   { id: 18, val: 4 },\r\n    //   { id: 19, val: 0 },\r\n    //   { id: 20, val: 0 },\r\n    //   { id: 21, val: 0 },\r\n    //   { id: 22, val: 1 },\r\n    //   { id: 23, val: 2 },\r\n    //   { id: 24, val: 3 },\r\n    //   { id: 25, val: 4 },\r\n    //   { id: 26, val: 1 },\r\n    //   { id: 27, val: 3 },\r\n    //   { id: 28, val: 4 },\r\n    //   { id: 29, val: 0 },\r\n    //   { id: 30, val: 0 },\r\n    //   { id: 31, val: 0 },\r\n    // ],\r\n  };\r\n\r\n  handleTogglerClick = () => {\r\n    const { collapsed } = this.state;\r\n    this.setState({\r\n      collapsed: !collapsed,\r\n    });\r\n  };\r\n\r\n  onClick = (nr) => () => {\r\n    this.setState({\r\n      radio: nr,\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    // questions.map((i, key) => {\r\n    //   let data = { id: i.id, val: null };\r\n    //   this.setState((prevState) => ({\r\n    //     selection: [...prevState.selection, data],\r\n    //   }));\r\n    // });\r\n    document.querySelector(\"nav\").style.height = \"65px\";\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.querySelector(\"nav\").style.height = \"auto\";\r\n  }\r\n\r\n  onChoose = async (val, e) => {\r\n    let data = { id: parseInt(e.target.id), val: val };\r\n    var new_selection = [];\r\n\r\n    await this.state.selection.map((i, key) => {\r\n      i.id == data.id\r\n        ? new_selection.push(data)\r\n        : new_selection.push({ id: i.id, val: i.val });\r\n    });\r\n    await this.setState({ selection: new_selection });\r\n  };\r\n\r\n  render() {\r\n    const { collapsed } = this.state;\r\n    const navStyle = { marginTop: \"2rem\" };\r\n    const overlay = (\r\n      <div\r\n        id=\"sidenav-overlay\"\r\n        style={{ backgroundColor: \"white\" }}\r\n        onClick={this.handleTogglerClick}\r\n      />\r\n    );\r\n    return (\r\n      <div id=\"questions\">\r\n        <div className=\"fadeInDown\">\r\n          <MDBNavbar\r\n            color=\"secondary-color\"\r\n            style={navStyle}\r\n            light\r\n            expand=\"md\"\r\n            scrolling\r\n            transparent\r\n          >\r\n            <MDBContainer>\r\n              <MDBNavbarBrand href=\"/career/\">\r\n                <strong>APSIT Career</strong>\r\n              </MDBNavbarBrand>\r\n              <MDBNavbarToggler onClick={this.handleTogglerClick} />\r\n              <MDBCollapse isOpen={collapsed} navbar>\r\n                <MDBNavbarNav right>\r\n                  <MDBNavItem>\r\n                    <MDBNavLink to=\"/career/\">Home</MDBNavLink>\r\n                  </MDBNavItem>\r\n                  <MDBNavItem>\r\n                    <MDBNavLink to=\"/career/dev\">Developers</MDBNavLink>\r\n                  </MDBNavItem>\r\n                </MDBNavbarNav>\r\n              </MDBCollapse>\r\n            </MDBContainer>\r\n          </MDBNavbar>\r\n          {collapsed && overlay}\r\n        </div>\r\n        <MDBView src={logo}>\r\n          <MDBContainer\r\n            style={{ height: \"100%\", width: \"100%\", paddingTop: \"5rem\" }}\r\n            className=\"d-flex justify-content-center align-items-center\"\r\n          >\r\n            <MDBRow>\r\n              <h1\r\n                className=\"display-10 font-weight-bold fadeInDown\"\r\n                style={{ animationDelay: \".2s\" }}\r\n              >\r\n                QUESTIONS\r\n              </h1>\r\n              <MDBCard style={{ width: \"100%\" }}>\r\n                {questions.map((question, index) => {\r\n                  return (\r\n                    <div\r\n                      className=\"card fadeInDown\"\r\n                      style={{ animationDelay: \".4s\" }}\r\n                    >\r\n                      <MDBCardBody>\r\n                        <MDBCardTitle>\r\n                          Q{index + 1}. {question.question}\r\n                        </MDBCardTitle>\r\n                        {options.map((opt, oindex) => {\r\n                          return (\r\n                            <MDBContainer className=\"mt-5\">\r\n                              <MDBInput\r\n                                id={question.id}\r\n                                onClick={this.onChoose.bind(\r\n                                  question.id,\r\n                                  opt.val\r\n                                )}\r\n                                checked={\r\n                                  this.state.selection[index].val === opt.val\r\n                                    ? true\r\n                                    : false\r\n                                }\r\n                                label={opt.opt}\r\n                                type=\"radio\"\r\n                              />\r\n                            </MDBContainer>\r\n                          );\r\n                        })}\r\n                      </MDBCardBody>\r\n                      <hr></hr>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </MDBCard>\r\n              <div\r\n                className=\"send-btn fadeInDown\"\r\n                style={{ animationDelay: \"1s\" }}\r\n              >\r\n                <MDBBtn color=\"success\">SEND ANSWER</MDBBtn>\r\n              </div>\r\n            </MDBRow>\r\n          </MDBContainer>\r\n        </MDBView>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Questions;\r\n","import React from 'react';\r\nimport Main from './Pages/Main';\r\nimport Developer from './Pages/dev';\r\nimport Questions from './Components/Questions';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route exact path=\"/career/\" component={Main} />\r\n        <Route exact path=\"/career/dev\" component={Developer} />\r\n        <Route exact path=\"/career/questions\" component={Questions} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}